#version 450 core
#extension GL_EXT_shader_16bit_storage : require
#include "common.h"
layout (local_size_x_id = 253, local_size_y_id = 254,
        local_size_z_id = 255) in;
layout (push_constant) uniform constants
{
  ShapeConstant shape0;
  ShapeConstant shape1;
};

layout (binding = 0) readonly buffer InputTensor0 { float16_t input0[]; };
layout (binding = 1) writeonly buffer OutputTensor0 { float16_t output0[]; };

void
main (void)
{
  uint tid_x = gl_GlobalInvocationID.x;
  uint tid_y = gl_GlobalInvocationID.y;
  uint tid_z = gl_GlobalInvocationID.z;

  uint CI = shape0.c;
  uint HI = shape0.h;
  uint WI = shape0.w;
  uint CO = shape1.c;
  uint HO = shape1.h;
  uint WO = shape1.w;

  if (tid_x >= WO || tid_y >= HO || tid_z >= CO)
    {
      return;
    }

  uint output_idx = tid_z * HO * WO + tid_y * WO + tid_x;
  uint input_idx = tid_y * HI * WI + tid_z * WI + tid_x;
  output0[output_idx] = input0[input_idx];
}
