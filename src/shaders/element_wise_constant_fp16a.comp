#version 450 core
#extension GL_EXT_shader_16bit_storage : require
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : require

layout (local_size_x_id = 253, local_size_y_id = 254,
        local_size_z_id = 255) in;

// 0 = add, 1 = sub, 2 = mul, 3 = div
layout (constant_id = 0) const int op_type = 0;
layout (push_constant) uniform constants
{
  int N;
  float16_t alpha;
};

layout (binding = 0) readonly buffer InputTensor0 { float16_t input0[]; };
layout (binding = 1) writeonly buffer OutputTensor0 { float16_t output0[]; };

void
main (void)
{
  uint tid = gl_GlobalInvocationID.x;

  if (tid > N)
    {
      return;
    }

  float16_t v0 = input0[tid];
  float16_t alpha_fp16 = alpha;
  if (op_type == 0)
    {
      output0[tid] = (v0 + alpha_fp16);
    }
  else if (op_type == 1)
    {
      output0[tid] = (v0 - alpha_fp16);
    }
  else if (op_type == 2)
    {
      output0[tid] = (v0 * alpha_fp16);
    }
  else if (op_type == 3)
    {
      output0[tid] = (v0 / alpha_fp16);
    }
}
