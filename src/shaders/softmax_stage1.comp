#version 450 core
layout (local_size_x_id = 253, local_size_y_id = 254,
        local_size_z_id = 255) in;

layout (push_constant) uniform constants
{
  uint C;
  uint H;
  uint W;
};

layout (binding = 0) readonly buffer InputTensor0 { float input0[]; };
layout (binding = 1) writeonly buffer OutputTensor0 { float output0[]; };

// block size = [1, 32, 1]
void
main (void)
{
  uint tid_x = gl_GlobalInvocationID.x;
  uint tid_y = gl_GlobalInvocationID.y;
  uint tid_z = gl_GlobalInvocationID.z;

  if (tid_x >= W || tid_y >= H || tid_z >= C)
    {
      return;
    }

  uint input_base = tid_z * H * W + tid_y * W;
  uint output_base = tid_z * H + tid_y;

  float r = 0;
  for (uint i = 0; i < W; ++i)
    {
      r += input0[input_base + i];
    }

  output0[output_base] = r;
}
